name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
    paths:
      - 'api/**'
      - 'loadtester/**'
      - 'manifests/**'
      - '.github/workflows/ci-cd.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'api/**'
      - 'loadtester/**'
      - 'manifests/**'

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  IMAGE_TAG: ${{ github.sha }}
  KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}

jobs:
  train-and-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          cd api
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest scikit-learn pandas numpy

      - name: Create data directory
        run: |
          mkdir -p api/data
      
      - name: Download sample data if needed
        run: |
          cd api
          python -c "
          from sklearn.datasets import load_iris
          import pandas as pd
          import os
          iris = load_iris()
          df = pd.DataFrame(data=iris.data, columns=iris.feature_names)
          df['species'] = pd.Series(iris.target).map({0: 'setosa', 1: 'versicolor', 2: 'virginica'})
          os.makedirs('data', exist_ok=True)
          df.to_csv('data/iris.csv', index=False)
          print('Datos de ejemplo generados en data/iris.csv')
          "

      - name: Train model
        run: |
          cd api
          python train_model.py

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Build and push API Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./api
          push: true
          tags: ${{ env.DOCKER_USERNAME }}/ml-api:${{ env.IMAGE_TAG }},${{ env.DOCKER_USERNAME }}/ml-api:latest

      - name: Build and push LoadTester Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./loadtester
          push: true
          tags: ${{ env.DOCKER_USERNAME }}/load-tester:${{ env.IMAGE_TAG }},${{ env.DOCKER_USERNAME }}/load-tester:latest

      - name: Save model artifact
        uses: actions/upload-artifact@v2
        with:
          name: model-artifact
          path: api/app/model.pkl

  update-manifests:
    needs: train-and-build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Update image tags
        run: |
          cd manifests
          find . -type f -name "*.yaml" -exec sed -i "s|\${DOCKER_USERNAME}|${{ env.DOCKER_USERNAME }}|g" {} \;
          find . -type f -name "*.yaml" -exec sed -i "s|\${IMAGE_TAG}|${{ env.IMAGE_TAG }}|g" {} \;

      - name: Commit and push changes
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add manifests
          git commit -m "Update image tags to ${{ env.IMAGE_TAG }}" || echo "No changes to commit"
          git push