apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jupyterlab-notebooks
  namespace: mlops-project
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: microk8s-hostpath
  resources:
    requests:
      storage: 10Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jupyterlab
  namespace: mlops-project
  labels:
    app: jupyterlab
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jupyterlab
  template:
    metadata:
      labels:
        app: jupyterlab
    spec:
      containers:
      - name: jupyterlab
        image: camilosvel/jupyterlab-mlops:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8888
        env:
        - name: MLFLOW_TRACKING_URI
          value: "http://mlflow.mlops-project.svc.cluster.local:5000"
        - name: MLFLOW_S3_ENDPOINT_URL
          value: "http://minio.mlops-project.svc.cluster.local:9000"
        - name: AWS_ACCESS_KEY_ID
          value: "adminuser"
        - name: AWS_SECRET_ACCESS_KEY
          value: "securepassword123"
        - name: JUPYTER_TOKEN
          value: "mlops123"
        volumeMounts:
        - name: notebook-storage
          mountPath: /home/jovyan/work
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 2000m
            memory: 4Gi
      volumes:
      - name: notebook-storage
        persistentVolumeClaim:
          claimName: jupyterlab-notebooks

---
apiVersion: v1
kind: Service
metadata:
  name: jupyterlab
  namespace: mlops-project
  labels:
    app: jupyterlab
spec:
  selector:
    app: jupyterlab
  ports:
  - name: http
    port: 8888
    targetPort: 8888
    nodePort: 30888
  type: NodePort