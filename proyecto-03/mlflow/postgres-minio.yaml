apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgres-mlflow-pv
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data/postgres-mlflow"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-mlflow-pvc
  namespace: mlops
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: minio-pv
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data/minio"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-pvc
  namespace: mlops
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: Secret
metadata:
  name: mlflow-secrets
  namespace: mlops
type: Opaque
stringData:
  POSTGRES_USER: mlopsuser
  POSTGRES_PASSWORD: mlops123
  POSTGRES_DB: mlflow
  MINIO_ROOT_USER: minioadmin
  MINIO_ROOT_PASSWORD: minioadmin
  AWS_ACCESS_KEY_ID: minioadmin
  AWS_SECRET_ACCESS_KEY: minioadmin
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-mlflow
  namespace: mlops
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-mlflow
  template:
    metadata:
      labels:
        app: postgres-mlflow
    spec:
      containers:
      - name: postgres
        image: postgres:13
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: mlflow-secrets
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mlflow-secrets
              key: POSTGRES_PASSWORD
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: mlflow-secrets
              key: POSTGRES_DB
        volumeMounts:
        - name: postgres-mlflow-storage
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: postgres-mlflow-storage
        persistentVolumeClaim:
          claimName: postgres-mlflow-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-mlflow
  namespace: mlops
spec:
  selector:
    app: postgres-mlflow
  ports:
  - port: 5432
    targetPort: 5432
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
  namespace: mlops
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
      - name: minio
        image: minio/minio:latest
        args:
        - server
        - /data
        - --console-address
        - ":9001"
        ports:
        - containerPort: 9000
        - containerPort: 9001
        env:
        - name: MINIO_ROOT_USER
          valueFrom:
            secretKeyRef:
              name: mlflow-secrets
              key: MINIO_ROOT_USER
        - name: MINIO_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mlflow-secrets
              key: MINIO_ROOT_PASSWORD
        volumeMounts:
        - name: minio-storage
          mountPath: /data
      volumes:
      - name: minio-storage
        persistentVolumeClaim:
          claimName: minio-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: minio
  namespace: mlops
spec:
  selector:
    app: minio
  ports:
  - name: api
    port: 9000
    targetPort: 9000
    nodePort: 30900
  - name: console
    port: 9001
    targetPort: 9001
    nodePort: 30901
  type: NodePort
---
apiVersion: batch/v1
kind: Job
metadata:
  name: minio-setup
  namespace: mlops
spec:
  template:
    spec:
      containers:
      - name: mc
        image: minio/mc
        command: ["/bin/sh", "-c"]
        args:
        - |
          sleep 10
          mc config host add minio http://minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD}
          mc mb --ignore-existing minio/mlflow
          exit 0
        env:
        - name: MINIO_ROOT_USER
          valueFrom:
            secretKeyRef:
              name: mlflow-secrets
              key: MINIO_ROOT_USER
        - name: MINIO_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mlflow-secrets
              key: MINIO_ROOT_PASSWORD
      restartPolicy: OnFailure